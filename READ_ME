This directory contains supplementary code and data supporting the paper "Designing Polymers with Molar Mass Distribution Based Machine Learning" by Jenny Hu et al.

This code uses an ensemble of feed forward neural networks (and pytorch) to predict the rheological and mechanical properties of high density polyethylene (HDPE) using the molecular weight distribution (MWD).
The included data (training_set.csv, test_set.csv, inverse_set.csv, and valorization_set.csv), scripts (eval_peppr.py), and models (peppr_[1-100].pt) contain all of the information needed to reproduce the main results of the paper.

System requirements:
python 	3.11.4
numpy   1.25.2
pytorch 2.0.1
sklearn 1.3.0
pandas 	1.5.3

=========================

After installing the required packages, the python script for evaluating the PEPPr ensemble on a given data set can be run with the following command,
python eval_peppr.py /data/path.csv
where /data/path.csv points to the .csv file that contains the features for the data that you would like to use to evaluate the PEPPr model. 
For example, inference on the test set is performed as
python eval_peppr.py /data/test_set.csv

The output will be a .csv file containing the means and standard deviations of the PEPPr ensemble predictions for the data contained within the original .csv file. 
Predictions are the log transformed properties with the following units:
Low shear viscosity: Pa路s
High shear viscosity: Pa路s
Toughness: MJ路m^(-3)路10^(-2)
Stress at break: MPa
Strain at break: %
Standard deviations are computed in the log-transformed space and can be used to gauge model uncertainty for a given prediction.

IDs for the inverse set and valorization set are in the form:
X-X-X-X-X-X-X-X-X-X 
Each X corresponds to the fraction of the following base polymers used to "computationally blend" the data point: 
PE38 V3 - PE98 V2 - PE121 - PE198 - PE277 - PE8 V2 - PE18 - PE357 V3 - commercial degraded - post consumer degraded
Note that the commercial degraded and post comsumer degraded entries are not applicable for the inverse set, resulting in IDs that contain two fewer entries.

Inference on all of the data sets included herein should run in a matter of seconds on a standard desktop computer.

We note that all models are stored in models/ with the .pt file extension, no training required.
Please see eval_peppr.py for a demonstration of how to load the models and use them for inference.
